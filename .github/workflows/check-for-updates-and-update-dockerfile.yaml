name: Check for updates and update Dockerfile

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  check-version-updates:
    runs-on: ubuntu-latest
    outputs:
      rar_version: ${{ steps.get_latest_rar_version.outputs.version }}
      rar2fs_version: ${{ steps.get_latest_rar2fs_version.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest UnRAR version
        id: get_latest_rar_version
        run: |
          latest_version=$(curl -s https://www.rarlab.com/rarnew.htm | grep -Eo "Version [0-9]+\.[0-9]+" | head -n 1 | awk '{print $2}')
          echo "version=$latest_version" >> $GITHUB_OUTPUT

      - name: Get latest rar2fs version
        uses: actions/github-script@v7
        id: get_latest_rar2fs_version
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: 'hasse69',
              repo: 'rar2fs'
            });
            return release.data.tag_name.replace(/^v/, '');  // Remove 'v' prefix

  update-dockerfile:
    runs-on: ubuntu-latest
    needs: check-version-updates
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Dockerfile with new rar version
        run: |
          sed -i "s/ARG RAR_VERSION=[^ ]*/ARG RAR_VERSION=${{ needs.check-version-updates.outputs.rar_version }}/" Dockerfile

      - name: Update Dockerfile with new rar2fs version
        run: |
          sed -i "s/ARG RAR2FS_VERSION=[^ ]*/ARG RAR2FS_VERSION=${{ needs.check-version-updates.outputs.rar2fs_version }}/" Dockerfile

      - name: Check for changes
        id: git_diff
        run: |
          if git diff --quiet Dockerfile; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit Dockerfile updates
        if: steps.git_diff.outputs.changed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add Dockerfile
          git commit -m "Update Dockerfile ARG values: rar=${{ needs.check-version-updates.outputs.rar_version }}, rar2fs=${{ needs.check-version-updates.outputs.rar2fs_version }}"
          git push
